{"ast":null,"code":"import _asyncToGenerator from \"/Users/mirkosiddi/Documents/development/duties-list/angular-duties-list/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { Component, Input } from \"@angular/core\";\nimport { FormControl, FormGroup, Validators } from \"@angular/forms\";\nlet DutyDetailsComponent = class DutyDetailsComponent {\n  constructor(dutyService, route, router) {\n    this.dutyService = dutyService;\n    this.route = route;\n    this.router = router;\n    this.viewMode = false;\n    this.currentDuty = {\n      Id: \"\",\n      Name: \"\"\n    };\n    this.updateDutyForm = new FormGroup({});\n    this.message = \"\";\n  }\n\n  ngOnInit() {\n    this.message = \"\";\n    console.log(\"this.currentDuty\", this.currentDuty);\n    this.getDuty(this.route.snapshot.params[\"id\"]).then(result => {\n      console.log(\"Duty loaded\");\n    }).catch(err => {\n      console.log(err);\n    });\n    console.log(\"this.currentDuty\", this.currentDuty);\n  }\n\n  getDuty(id) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      _this.dutyService.get(id).subscribe({\n        next: data => {\n          _this.currentDuty = data;\n          console.log(\"data\", data);\n        },\n        complete: () => {\n          _this.createForm();\n        },\n        error: e => console.error(e)\n      });\n    })();\n  }\n\n  createForm() {\n    this.updateDutyForm = new FormGroup({\n      Id: new FormControl(this.currentDuty.Id, [Validators.required, Validators.minLength(2), Validators.maxLength(4)]),\n      Name: new FormControl(this.currentDuty.Name, [Validators.required, Validators.minLength(8), Validators.maxLength(50)])\n    });\n    console.log(\"this.updateDutyForm\", this.updateDutyForm);\n  }\n\n  updateDuty() {\n    this.message = \"\";\n    this.dutyService.update(this.currentDuty.Id, this.updateDutyForm.value).subscribe({\n      next: res => {\n        console.log(res);\n        this.message = res.message ? res.message : \"This Duty was updated successfully!\";\n      },\n      error: e => console.error(e)\n    });\n  }\n\n  deleteDuty() {\n    confirm(\"Are you sure you want to delete this item?\") && this.dutyService.delete(this.currentDuty.Id).subscribe({\n      next: res => {\n        console.log(res);\n        this.router.navigate([\"/duties\"]);\n      },\n      error: e => console.error(e)\n    });\n  }\n\n};\n\n__decorate([Input()], DutyDetailsComponent.prototype, \"viewMode\", void 0);\n\n__decorate([Input()], DutyDetailsComponent.prototype, \"currentDuty\", void 0);\n\nDutyDetailsComponent = __decorate([Component({\n  selector: \"app-duty-details\",\n  templateUrl: \"./duty-details.component.html\",\n  styleUrls: [\"./duty-details.component.css\"]\n})], DutyDetailsComponent);\nexport { DutyDetailsComponent };","map":{"version":3,"mappings":"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","names":["Component","Input","FormControl","FormGroup","Validators","DutyDetailsComponent","constructor","dutyService","route","router","Id","Name","ngOnInit","message","console","log","currentDuty","getDuty","snapshot","params","then","result","catch","err","id","get","subscribe","next","data","complete","createForm","error","e","updateDutyForm","required","minLength","maxLength","updateDuty","update","value","res","deleteDuty","confirm","delete","navigate","__decorate","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/Users/mirkosiddi/Documents/development/duties-list/angular-duties-list/src/app/components/duty-details/duty-details.component.ts"],"sourcesContent":["import { Component, createPlatform, Input, OnInit } from \"@angular/core\";\nimport { FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport { DutyService } from \"src/app/services/duty.service\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { Duty } from \"src/app/models/duty.model\";\n@Component({\n  selector: \"app-duty-details\",\n  templateUrl: \"./duty-details.component.html\",\n  styleUrls: [\"./duty-details.component.css\"],\n})\nexport class DutyDetailsComponent implements OnInit {\n  @Input() viewMode = false;\n  @Input() currentDuty: Duty = {\n    Id: \"\",\n    Name: \"\",\n  };\n  updateDutyForm: FormGroup = new FormGroup({});\n  message = \"\";\n\n  constructor(\n    private dutyService: DutyService,\n    private route: ActivatedRoute,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.message = \"\";\n    console.log(\"this.currentDuty\", this.currentDuty);\n    this.getDuty(this.route.snapshot.params[\"id\"])\n      .then((result) => {\n        console.log(\"Duty loaded\");\n      })\n      .catch((err: Error) => {\n        console.log(err);\n      });\n    console.log(\"this.currentDuty\", this.currentDuty);\n  }\n\n  async getDuty(id: String): Promise<void> {\n    this.dutyService.get(id).subscribe({\n      next: (data) => {\n        this.currentDuty = data;\n        console.log(\"data\", data);\n      },\n      complete: () => {\n        this.createForm();\n      },\n      error: (e) => console.error(e),\n    });\n  }\n\n  createForm(): void {\n    this.updateDutyForm = new FormGroup({\n      Id: new FormControl(this.currentDuty.Id, [\n        Validators.required,\n        Validators.minLength(2),\n        Validators.maxLength(4),\n      ]),\n      Name: new FormControl(this.currentDuty.Name, [\n        Validators.required,\n        Validators.minLength(8),\n        Validators.maxLength(50),\n      ]),\n    });\n    console.log(\"this.updateDutyForm\", this.updateDutyForm);\n  }\n\n  updateDuty(): void {\n    this.message = \"\";\n    this.dutyService\n      .update(this.currentDuty.Id, this.updateDutyForm.value)\n      .subscribe({\n        next: (res) => {\n          console.log(res);\n          this.message = res.message\n            ? res.message\n            : \"This Duty was updated successfully!\";\n        },\n        error: (e) => console.error(e),\n      });\n  }\n\n  deleteDuty(): void {\n    confirm(\"Are you sure you want to delete this item?\") &&\n      this.dutyService.delete(this.currentDuty.Id).subscribe({\n        next: (res) => {\n          console.log(res);\n          this.router.navigate([\"/duties\"]);\n        },\n        error: (e) => console.error(e),\n      });\n  }\n}\n"]},"metadata":{},"sourceType":"module"}